{% extends 'base.html.twig' %}

{% block contenu  %}
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-offset-3 col-md-6">
                <div>
                    <h1 id="titreRubriques" class="text-center">Listes des Brevets du MuFoPAM</h1>
                </div>
                <!-- Barre de recherche -->
                <div id="custom-search-input">
                    <div class="input-group col-md-12">
                        <input id="search" type="text" class="quicksearch form-control input-lg" placeholder="Rechercher un brevet ..." />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" type="button">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="grid row ">
            {% for key, brevet in brevets %}
                    <div class="element-item bleu grid-sizerBrevet carteEquipe">
                        <div class="">
                            <div class="topCarte">
                                <div class="titreBrevet">
                                    <h2 class="text-center"> {{ brevet.titre }} </h2>
                                </div>
                                <div class="paddingActu">
                                    <div>
                                        <p> {{ brevet.brevet | raw }}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

            {% endfor %}
        </div>
    </div>

    <script>
        // quick search regex
        var qsRegex;

        // init Isotope
        var $grid = $('.grid').isotope({
            itemSelector: '.element-item',
            layoutMode: 'fitRows',
            filter: function() {
                return qsRegex ? $(this).text().match( qsRegex ) : true;
            }
        });

        // use value of search field to filter
        var $quicksearch = $('.quicksearch').keyup( debounce( function() {
            qsRegex = new RegExp( $quicksearch.val(), 'gi' );
            $grid.isotope();
        }, 200 ) );

        // debounce so filtering doesn't happen every millisecond
        function debounce( fn, threshold ) {
            var timeout;
            return function debounced() {
                if ( timeout ) {
                    clearTimeout( timeout );
                }
                function delayed() {
                    fn();
                    timeout = null;
                }
                timeout = setTimeout( delayed, threshold || 100 );
            }
        }

    </script>
{% endblock %}
